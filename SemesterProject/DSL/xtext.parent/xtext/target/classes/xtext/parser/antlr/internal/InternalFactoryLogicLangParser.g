/*
 * generated by Xtext 2.25.0
 */
parser grammar InternalFactoryLogicLangParser;

options {
	tokenVocab=InternalFactoryLogicLangLexer;
	superClass=AbstractInternalAntlrParser;
}

@header {
package xtext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import xtext.services.FactoryLogicLangGrammarAccess;

}

@members {

 	private FactoryLogicLangGrammarAccess grammarAccess;

    public InternalFactoryLogicLangParser(TokenStream input, FactoryLogicLangGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected FactoryLogicLangGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getDeclarationsDeclarationParserRuleCall_0());
			}
			lv_declarations_0_0=ruleDeclaration
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"declarations",
					lv_declarations_0_0,
					"xtext.FactoryLogicLang.Declaration");
				afterParserOrEnumRuleCall();
			}
		)
	)+
;

// Entry rule entryRuleDeclaration
entryRuleDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclarationRule()); }
	iv_ruleDeclaration=ruleDeclaration
	{ $current=$iv_ruleDeclaration.current; }
	EOF;

// Rule Declaration
ruleDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDeclarationAccess().getDeviceParserRuleCall_0());
		}
		this_Device_0=ruleDevice
		{
			$current = $this_Device_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDeclarationAccess().getLogicParserRuleCall_1());
		}
		this_Logic_1=ruleLogic
		{
			$current = $this_Logic_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDevice
entryRuleDevice returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeviceRule()); }
	iv_ruleDevice=ruleDevice
	{ $current=$iv_ruleDevice.current; }
	EOF;

// Rule Device
ruleDevice returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDeviceAccess().getCraneParserRuleCall_0());
		}
		this_Crane_0=ruleCrane
		{
			$current = $this_Crane_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDeviceAccess().getStorageParserRuleCall_1());
		}
		this_Storage_1=ruleStorage
		{
			$current = $this_Storage_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDeviceAccess().getCameraParserRuleCall_2());
		}
		this_Camera_2=ruleCamera
		{
			$current = $this_Camera_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCrane
entryRuleCrane returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCraneRule()); }
	iv_ruleCrane=ruleCrane
	{ $current=$iv_ruleCrane.current; }
	EOF;

// Rule Crane
ruleCrane returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Create
		{
			newLeafNode(otherlv_0, grammarAccess.getCraneAccess().getCreateKeyword_0());
		}
		otherlv_1=Crane
		{
			newLeafNode(otherlv_1, grammarAccess.getCraneAccess().getCraneKeyword_1());
		}
		otherlv_2=Named
		{
			newLeafNode(otherlv_2, grammarAccess.getCraneAccess().getNamedKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_STRING
				{
					newLeafNode(lv_name_3_0, grammarAccess.getCraneAccess().getNameSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCraneRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		this_BEGIN_4=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_4, grammarAccess.getCraneAccess().getBEGINTerminalRuleCall_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCraneAccess().getParametersCraneParameterParserRuleCall_5_0());
				}
				lv_parameters_5_0=ruleCraneParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCraneRule());
					}
					add(
						$current,
						"parameters",
						lv_parameters_5_0,
						"xtext.FactoryLogicLang.CraneParameter");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		this_END_6=RULE_END
		{
			newLeafNode(this_END_6, grammarAccess.getCraneAccess().getENDTerminalRuleCall_6());
		}
	)
;

// Entry rule entryRuleCraneParameter
entryRuleCraneParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCraneParameterRule()); }
	iv_ruleCraneParameter=ruleCraneParameter
	{ $current=$iv_ruleCraneParameter.current; }
	EOF;

// Rule CraneParameter
ruleCraneParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=With
		{
			newLeafNode(otherlv_0, grammarAccess.getCraneParameterAccess().getWithKeyword_0());
		}
		otherlv_1=Position
		{
			newLeafNode(otherlv_1, grammarAccess.getCraneParameterAccess().getPositionKeyword_1());
		}
		otherlv_2=At
		{
			newLeafNode(otherlv_2, grammarAccess.getCraneParameterAccess().getAtKeyword_2());
		}
		(
			(
				lv_degree_3_0=RULE_INT
				{
					newLeafNode(lv_degree_3_0, grammarAccess.getCraneParameterAccess().getDegreeINTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCraneParameterRule());
					}
					setWithLastConsumed(
						$current,
						"degree",
						lv_degree_3_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_4=Named
		{
			newLeafNode(otherlv_4, grammarAccess.getCraneParameterAccess().getNamedKeyword_4());
		}
		(
			(
				lv_name_5_0=RULE_STRING
				{
					newLeafNode(lv_name_5_0, grammarAccess.getCraneParameterAccess().getNameSTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCraneParameterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_5_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleStorage
entryRuleStorage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStorageRule()); }
	iv_ruleStorage=ruleStorage
	{ $current=$iv_ruleStorage.current; }
	EOF;

// Rule Storage
ruleStorage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Create
		{
			newLeafNode(otherlv_0, grammarAccess.getStorageAccess().getCreateKeyword_0());
		}
		otherlv_1=Storage
		{
			newLeafNode(otherlv_1, grammarAccess.getStorageAccess().getStorageKeyword_1());
		}
		otherlv_2=Named
		{
			newLeafNode(otherlv_2, grammarAccess.getStorageAccess().getNamedKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_STRING
				{
					newLeafNode(lv_name_3_0, grammarAccess.getStorageAccess().getNameSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStorageRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		this_BEGIN_4=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_4, grammarAccess.getStorageAccess().getBEGINTerminalRuleCall_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStorageAccess().getParametersStorageParameterParserRuleCall_5_0());
				}
				lv_parameters_5_0=ruleStorageParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStorageRule());
					}
					add(
						$current,
						"parameters",
						lv_parameters_5_0,
						"xtext.FactoryLogicLang.StorageParameter");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		this_END_6=RULE_END
		{
			newLeafNode(this_END_6, grammarAccess.getStorageAccess().getENDTerminalRuleCall_6());
		}
	)
;

// Entry rule entryRuleStorageParameter
entryRuleStorageParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStorageParameterRule()); }
	iv_ruleStorageParameter=ruleStorageParameter
	{ $current=$iv_ruleStorageParameter.current; }
	EOF;

// Rule StorageParameter
ruleStorageParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getStorageParameterAccess().getStoragePositionParameterParserRuleCall_0());
		}
		this_StoragePositionParameter_0=ruleStoragePositionParameter
		{
			$current = $this_StoragePositionParameter_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStorageParameterAccess().getStorageSlotParameterParserRuleCall_1());
		}
		this_StorageSlotParameter_1=ruleStorageSlotParameter
		{
			$current = $this_StorageSlotParameter_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleStorageSlotParameter
entryRuleStorageSlotParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStorageSlotParameterRule()); }
	iv_ruleStorageSlotParameter=ruleStorageSlotParameter
	{ $current=$iv_ruleStorageSlotParameter.current; }
	EOF;

// Rule StorageSlotParameter
ruleStorageSlotParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=With
		{
			newLeafNode(otherlv_0, grammarAccess.getStorageSlotParameterAccess().getWithKeyword_0());
		}
		(
			(
				lv_slots_1_0=RULE_INT
				{
					newLeafNode(lv_slots_1_0, grammarAccess.getStorageSlotParameterAccess().getSlotsINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStorageSlotParameterRule());
					}
					setWithLastConsumed(
						$current,
						"slots",
						lv_slots_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_2=Slots
		{
			newLeafNode(otherlv_2, grammarAccess.getStorageSlotParameterAccess().getSlotsKeyword_2());
		}
	)
;

// Entry rule entryRuleStoragePositionParameter
entryRuleStoragePositionParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStoragePositionParameterRule()); }
	iv_ruleStoragePositionParameter=ruleStoragePositionParameter
	{ $current=$iv_ruleStoragePositionParameter.current; }
	EOF;

// Rule StoragePositionParameter
ruleStoragePositionParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=With
		{
			newLeafNode(otherlv_0, grammarAccess.getStoragePositionParameterAccess().getWithKeyword_0());
		}
		otherlv_1=Position
		{
			newLeafNode(otherlv_1, grammarAccess.getStoragePositionParameterAccess().getPositionKeyword_1());
		}
		otherlv_2=At
		{
			newLeafNode(otherlv_2, grammarAccess.getStoragePositionParameterAccess().getAtKeyword_2());
		}
		otherlv_3=Slot
		{
			newLeafNode(otherlv_3, grammarAccess.getStoragePositionParameterAccess().getSlotKeyword_3());
		}
		(
			(
				lv_slot_4_0=RULE_INT
				{
					newLeafNode(lv_slot_4_0, grammarAccess.getStoragePositionParameterAccess().getSlotINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStoragePositionParameterRule());
					}
					setWithLastConsumed(
						$current,
						"slot",
						lv_slot_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_5=Named
		{
			newLeafNode(otherlv_5, grammarAccess.getStoragePositionParameterAccess().getNamedKeyword_5());
		}
		(
			(
				lv_name_6_0=RULE_STRING
				{
					newLeafNode(lv_name_6_0, grammarAccess.getStoragePositionParameterAccess().getNameSTRINGTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStoragePositionParameterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_6_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleCamera
entryRuleCamera returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCameraRule()); }
	iv_ruleCamera=ruleCamera
	{ $current=$iv_ruleCamera.current; }
	EOF;

// Rule Camera
ruleCamera returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Create
		{
			newLeafNode(otherlv_0, grammarAccess.getCameraAccess().getCreateKeyword_0());
		}
		otherlv_1=Camera
		{
			newLeafNode(otherlv_1, grammarAccess.getCameraAccess().getCameraKeyword_1());
		}
		otherlv_2=Named
		{
			newLeafNode(otherlv_2, grammarAccess.getCameraAccess().getNamedKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_STRING
				{
					newLeafNode(lv_name_3_0, grammarAccess.getCameraAccess().getNameSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCameraRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		this_BEGIN_4=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_4, grammarAccess.getCameraAccess().getBEGINTerminalRuleCall_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCameraAccess().getParametersCameraParameterParserRuleCall_5_0());
				}
				lv_parameters_5_0=ruleCameraParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCameraRule());
					}
					add(
						$current,
						"parameters",
						lv_parameters_5_0,
						"xtext.FactoryLogicLang.CameraParameter");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		this_END_6=RULE_END
		{
			newLeafNode(this_END_6, grammarAccess.getCameraAccess().getENDTerminalRuleCall_6());
		}
	)
;

// Entry rule entryRuleCameraParameter
entryRuleCameraParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCameraParameterRule()); }
	iv_ruleCameraParameter=ruleCameraParameter
	{ $current=$iv_ruleCameraParameter.current; }
	EOF;

// Rule CameraParameter
ruleCameraParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=With
		{
			newLeafNode(otherlv_0, grammarAccess.getCameraParameterAccess().getWithKeyword_0());
		}
		otherlv_1=Color
		{
			newLeafNode(otherlv_1, grammarAccess.getCameraParameterAccess().getColorKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCameraParameterAccess().getColorCOLOREnumRuleCall_2_0());
				}
				lv_color_2_0=ruleCOLOR
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCameraParameterRule());
					}
					set(
						$current,
						"color",
						lv_color_2_0,
						"xtext.FactoryLogicLang.COLOR");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLogic
entryRuleLogic returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLogicRule()); }
	iv_ruleLogic=ruleLogic
	{ $current=$iv_ruleLogic.current; }
	EOF;

// Rule Logic
ruleLogic returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLogicAccess().getConditionalParserRuleCall_0());
		}
		this_Conditional_0=ruleConditional
		{
			$current = $this_Conditional_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLogicAccess().getLoopParserRuleCall_1());
		}
		this_Loop_1=ruleLoop
		{
			$current = $this_Loop_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLogicAccess().getOperationParserRuleCall_2());
		}
		this_Operation_2=ruleOperation
		{
			$current = $this_Operation_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleConditional
entryRuleConditional returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionalRule()); }
	iv_ruleConditional=ruleConditional
	{ $current=$iv_ruleConditional.current; }
	EOF;

// Rule Conditional
ruleConditional returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=If
		{
			newLeafNode(otherlv_0, grammarAccess.getConditionalAccess().getIfKeyword_0());
		}
		(
			(
				lv_variable_1_0=RULE_ID
				{
					newLeafNode(lv_variable_1_0, grammarAccess.getConditionalAccess().getVariableIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConditionalRule());
					}
					setWithLastConsumed(
						$current,
						"variable",
						lv_variable_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2=Of
			{
				newLeafNode(otherlv_2, grammarAccess.getConditionalAccess().getOfKeyword_2_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConditionalRule());
						}
					}
					otherlv_3=RULE_ID
					{
						newLeafNode(otherlv_3, grammarAccess.getConditionalAccess().getSourceDeviceCrossReference_2_1_0());
					}
				)
			)
		)?
		otherlv_4=Is
		{
			newLeafNode(otherlv_4, grammarAccess.getConditionalAccess().getIsKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionalAccess().getOperatorBOOLEAN_OPERATOREnumRuleCall_4_0());
				}
				lv_operator_5_0=ruleBOOLEAN_OPERATOR
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionalRule());
					}
					set(
						$current,
						"operator",
						lv_operator_5_0,
						"xtext.FactoryLogicLang.BOOLEAN_OPERATOR");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getConditionalAccess().getComparison_constCONST_VARIABLESEnumRuleCall_5_0_0());
					}
					lv_comparison_const_6_0=ruleCONST_VARIABLES
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionalRule());
						}
						set(
							$current,
							"comparison_const",
							lv_comparison_const_6_0,
							"xtext.FactoryLogicLang.CONST_VARIABLES");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getConditionalAccess().getComparison_colorCOLOREnumRuleCall_5_1_0());
					}
					lv_comparison_color_7_0=ruleCOLOR
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionalRule());
						}
						set(
							$current,
							"comparison_color",
							lv_comparison_color_7_0,
							"xtext.FactoryLogicLang.COLOR");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					lv_comparison_int_8_0=RULE_INT
					{
						newLeafNode(lv_comparison_int_8_0, grammarAccess.getConditionalAccess().getComparison_intINTTerminalRuleCall_5_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConditionalRule());
						}
						setWithLastConsumed(
							$current,
							"comparison_int",
							lv_comparison_int_8_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		otherlv_9=Then
		{
			newLeafNode(otherlv_9, grammarAccess.getConditionalAccess().getThenKeyword_6());
		}
		this_BEGIN_10=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_10, grammarAccess.getConditionalAccess().getBEGINTerminalRuleCall_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionalAccess().getLogicsLogicParserRuleCall_8_0());
				}
				lv_logics_11_0=ruleLogic
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionalRule());
					}
					add(
						$current,
						"logics",
						lv_logics_11_0,
						"xtext.FactoryLogicLang.Logic");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		this_END_12=RULE_END
		{
			newLeafNode(this_END_12, grammarAccess.getConditionalAccess().getENDTerminalRuleCall_9());
		}
	)
;

// Entry rule entryRuleLoop
entryRuleLoop returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLoopRule()); }
	iv_ruleLoop=ruleLoop
	{ $current=$iv_ruleLoop.current; }
	EOF;

// Rule Loop
ruleLoop returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=For
		{
			newLeafNode(otherlv_0, grammarAccess.getLoopAccess().getForKeyword_0());
		}
		otherlv_1=Each
		{
			newLeafNode(otherlv_1, grammarAccess.getLoopAccess().getEachKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getLoopAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLoopRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=In
		{
			newLeafNode(otherlv_3, grammarAccess.getLoopAccess().getInKeyword_3());
		}
		(
			(
				lv_list_4_0=RULE_ID
				{
					newLeafNode(lv_list_4_0, grammarAccess.getLoopAccess().getListIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLoopRule());
					}
					setWithLastConsumed(
						$current,
						"list",
						lv_list_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_5=Of
			{
				newLeafNode(otherlv_5, grammarAccess.getLoopAccess().getOfKeyword_5_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLoopRule());
						}
					}
					otherlv_6=RULE_ID
					{
						newLeafNode(otherlv_6, grammarAccess.getLoopAccess().getSourceDeviceCrossReference_5_1_0());
					}
				)
			)
		)?
		otherlv_7=That
		{
			newLeafNode(otherlv_7, grammarAccess.getLoopAccess().getThatKeyword_6());
		}
		otherlv_8=Is
		{
			newLeafNode(otherlv_8, grammarAccess.getLoopAccess().getIsKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLoopAccess().getOperatorBOOLEAN_OPERATOREnumRuleCall_8_0());
				}
				lv_operator_9_0=ruleBOOLEAN_OPERATOR
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLoopRule());
					}
					set(
						$current,
						"operator",
						lv_operator_9_0,
						"xtext.FactoryLogicLang.BOOLEAN_OPERATOR");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getLoopAccess().getComparison_constCONST_VARIABLESEnumRuleCall_9_0_0());
					}
					lv_comparison_const_10_0=ruleCONST_VARIABLES
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLoopRule());
						}
						set(
							$current,
							"comparison_const",
							lv_comparison_const_10_0,
							"xtext.FactoryLogicLang.CONST_VARIABLES");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getLoopAccess().getComparison_colorCOLOREnumRuleCall_9_1_0());
					}
					lv_comparison_color_11_0=ruleCOLOR
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLoopRule());
						}
						set(
							$current,
							"comparison_color",
							lv_comparison_color_11_0,
							"xtext.FactoryLogicLang.COLOR");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					lv_comparison_int_12_0=RULE_INT
					{
						newLeafNode(lv_comparison_int_12_0, grammarAccess.getLoopAccess().getComparison_intINTTerminalRuleCall_9_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLoopRule());
						}
						setWithLastConsumed(
							$current,
							"comparison_int",
							lv_comparison_int_12_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		otherlv_13=Then
		{
			newLeafNode(otherlv_13, grammarAccess.getLoopAccess().getThenKeyword_10());
		}
		this_BEGIN_14=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_14, grammarAccess.getLoopAccess().getBEGINTerminalRuleCall_11());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLoopAccess().getLogicsLogicParserRuleCall_12_0());
				}
				lv_logics_15_0=ruleLogic
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLoopRule());
					}
					add(
						$current,
						"logics",
						lv_logics_15_0,
						"xtext.FactoryLogicLang.Logic");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		this_END_16=RULE_END
		{
			newLeafNode(this_END_16, grammarAccess.getLoopAccess().getENDTerminalRuleCall_13());
		}
	)
;

// Entry rule entryRuleOperation
entryRuleOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationRule()); }
	iv_ruleOperation=ruleOperation
	{ $current=$iv_ruleOperation.current; }
	EOF;

// Rule Operation
ruleOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOperationAccess().getStorageMoveEmptySlotParserRuleCall_0());
		}
		this_StorageMoveEmptySlot_0=ruleStorageMoveEmptySlot
		{
			$current = $this_StorageMoveEmptySlot_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOperationAccess().getStorageMoveSlotParserRuleCall_1());
		}
		this_StorageMoveSlot_1=ruleStorageMoveSlot
		{
			$current = $this_StorageMoveSlot_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOperationAccess().getStorageMarkSlotParserRuleCall_2());
		}
		this_StorageMarkSlot_2=ruleStorageMarkSlot
		{
			$current = $this_StorageMarkSlot_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOperationAccess().getCameraScanParserRuleCall_3());
		}
		this_CameraScan_3=ruleCameraScan
		{
			$current = $this_CameraScan_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOperationAccess().getCranePickupParserRuleCall_4());
		}
		this_CranePickup_4=ruleCranePickup
		{
			$current = $this_CranePickup_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOperationAccess().getCraneDropParserRuleCall_5());
		}
		this_CraneDrop_5=ruleCraneDrop
		{
			$current = $this_CraneDrop_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleStorageMoveEmptySlot
entryRuleStorageMoveEmptySlot returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStorageMoveEmptySlotRule()); }
	iv_ruleStorageMoveEmptySlot=ruleStorageMoveEmptySlot
	{ $current=$iv_ruleStorageMoveEmptySlot.current; }
	EOF;

// Rule StorageMoveEmptySlot
ruleStorageMoveEmptySlot returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStorageMoveEmptySlotRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getStorageMoveEmptySlotAccess().getDeviceStorageCrossReference_0_0());
				}
			)
		)
		otherlv_1=Move
		{
			newLeafNode(otherlv_1, grammarAccess.getStorageMoveEmptySlotAccess().getMoveKeyword_1());
		}
		otherlv_2=Empty
		{
			newLeafNode(otherlv_2, grammarAccess.getStorageMoveEmptySlotAccess().getEmptyKeyword_2());
		}
		otherlv_3=Slot
		{
			newLeafNode(otherlv_3, grammarAccess.getStorageMoveEmptySlotAccess().getSlotKeyword_3());
		}
		otherlv_4=To
		{
			newLeafNode(otherlv_4, grammarAccess.getStorageMoveEmptySlotAccess().getToKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStorageMoveEmptySlotRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getStorageMoveEmptySlotAccess().getDestinationStoragePositionParameterCrossReference_5_0());
				}
			)
		)
	)
;

// Entry rule entryRuleStorageMoveSlot
entryRuleStorageMoveSlot returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStorageMoveSlotRule()); }
	iv_ruleStorageMoveSlot=ruleStorageMoveSlot
	{ $current=$iv_ruleStorageMoveSlot.current; }
	EOF;

// Rule StorageMoveSlot
ruleStorageMoveSlot returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStorageMoveSlotRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getStorageMoveSlotAccess().getDeviceStorageCrossReference_0_0());
				}
			)
		)
		otherlv_1=Move
		{
			newLeafNode(otherlv_1, grammarAccess.getStorageMoveSlotAccess().getMoveKeyword_1());
		}
		otherlv_2=Slot
		{
			newLeafNode(otherlv_2, grammarAccess.getStorageMoveSlotAccess().getSlotKeyword_2());
		}
		otherlv_3=At
		{
			newLeafNode(otherlv_3, grammarAccess.getStorageMoveSlotAccess().getAtKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStorageMoveSlotRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getStorageMoveSlotAccess().getPositionStoragePositionParameterCrossReference_4_0());
				}
			)
		)
		otherlv_5=To
		{
			newLeafNode(otherlv_5, grammarAccess.getStorageMoveSlotAccess().getToKeyword_5());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStorageMoveSlotRule());
					}
				}
				otherlv_6=RULE_ID
				{
					newLeafNode(otherlv_6, grammarAccess.getStorageMoveSlotAccess().getDestinationStoragePositionParameterCrossReference_6_0());
				}
			)
		)
	)
;

// Entry rule entryRuleStorageMarkSlot
entryRuleStorageMarkSlot returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStorageMarkSlotRule()); }
	iv_ruleStorageMarkSlot=ruleStorageMarkSlot
	{ $current=$iv_ruleStorageMarkSlot.current; }
	EOF;

// Rule StorageMarkSlot
ruleStorageMarkSlot returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStorageMarkSlotRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getStorageMarkSlotAccess().getDeviceStorageCrossReference_0_0());
				}
			)
		)
		otherlv_1=Mark
		{
			newLeafNode(otherlv_1, grammarAccess.getStorageMarkSlotAccess().getMarkKeyword_1());
		}
		otherlv_2=Slot
		{
			newLeafNode(otherlv_2, grammarAccess.getStorageMarkSlotAccess().getSlotKeyword_2());
		}
		otherlv_3=At
		{
			newLeafNode(otherlv_3, grammarAccess.getStorageMarkSlotAccess().getAtKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStorageMarkSlotRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getStorageMarkSlotAccess().getPositionStoragePositionParameterCrossReference_4_0());
				}
			)
		)
		otherlv_5=As
		{
			newLeafNode(otherlv_5, grammarAccess.getStorageMarkSlotAccess().getAsKeyword_5());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStorageMarkSlotAccess().getComparison_constCONST_VARIABLESEnumRuleCall_6_0_0());
					}
					lv_comparison_const_6_0=ruleCONST_VARIABLES
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStorageMarkSlotRule());
						}
						set(
							$current,
							"comparison_const",
							lv_comparison_const_6_0,
							"xtext.FactoryLogicLang.CONST_VARIABLES");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStorageMarkSlotAccess().getComparison_colorCOLOREnumRuleCall_6_1_0());
					}
					lv_comparison_color_7_0=ruleCOLOR
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStorageMarkSlotRule());
						}
						set(
							$current,
							"comparison_color",
							lv_comparison_color_7_0,
							"xtext.FactoryLogicLang.COLOR");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					lv_comparison_int_8_0=RULE_INT
					{
						newLeafNode(lv_comparison_int_8_0, grammarAccess.getStorageMarkSlotAccess().getComparison_intINTTerminalRuleCall_6_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStorageMarkSlotRule());
						}
						setWithLastConsumed(
							$current,
							"comparison_int",
							lv_comparison_int_8_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		(
			otherlv_9=In
			{
				newLeafNode(otherlv_9, grammarAccess.getStorageMarkSlotAccess().getInKeyword_7_0());
			}
			(
				(
					lv_quantity_10_0=RULE_INT
					{
						newLeafNode(lv_quantity_10_0, grammarAccess.getStorageMarkSlotAccess().getQuantityINTTerminalRuleCall_7_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStorageMarkSlotRule());
						}
						setWithLastConsumed(
							$current,
							"quantity",
							lv_quantity_10_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getStorageMarkSlotAccess().getMeasureTIMEEnumRuleCall_7_2_0());
					}
					lv_measure_11_0=ruleTIME
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStorageMarkSlotRule());
						}
						set(
							$current,
							"measure",
							lv_measure_11_0,
							"xtext.FactoryLogicLang.TIME");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleCameraScan
entryRuleCameraScan returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCameraScanRule()); }
	iv_ruleCameraScan=ruleCameraScan
	{ $current=$iv_ruleCameraScan.current; }
	EOF;

// Rule CameraScan
ruleCameraScan returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCameraScanRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getCameraScanAccess().getDeviceCameraCrossReference_0_0());
				}
			)
		)
		otherlv_1=Scan
		{
			newLeafNode(otherlv_1, grammarAccess.getCameraScanAccess().getScanKeyword_1());
		}
		otherlv_2=Color
		{
			newLeafNode(otherlv_2, grammarAccess.getCameraScanAccess().getColorKeyword_2());
		}
		otherlv_3=Into
		{
			newLeafNode(otherlv_3, grammarAccess.getCameraScanAccess().getIntoKeyword_3());
		}
		(
			(
				lv_name_4_0=RULE_ID
				{
					newLeafNode(lv_name_4_0, grammarAccess.getCameraScanAccess().getNameIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCameraScanRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleCranePickup
entryRuleCranePickup returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCranePickupRule()); }
	iv_ruleCranePickup=ruleCranePickup
	{ $current=$iv_ruleCranePickup.current; }
	EOF;

// Rule CranePickup
ruleCranePickup returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCranePickupRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getCranePickupAccess().getDeviceCraneCrossReference_0_0());
				}
			)
		)
		otherlv_1=Pickup
		{
			newLeafNode(otherlv_1, grammarAccess.getCranePickupAccess().getPickupKeyword_1());
		}
		otherlv_2=Item
		{
			newLeafNode(otherlv_2, grammarAccess.getCranePickupAccess().getItemKeyword_2());
		}
		otherlv_3=At
		{
			newLeafNode(otherlv_3, grammarAccess.getCranePickupAccess().getAtKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCranePickupRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getCranePickupAccess().getLocationCraneParameterCrossReference_4_0());
				}
			)
		)
	)
;

// Entry rule entryRuleCraneDrop
entryRuleCraneDrop returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCraneDropRule()); }
	iv_ruleCraneDrop=ruleCraneDrop
	{ $current=$iv_ruleCraneDrop.current; }
	EOF;

// Rule CraneDrop
ruleCraneDrop returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCraneDropRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getCraneDropAccess().getDeviceCraneCrossReference_0_0());
				}
			)
		)
		otherlv_1=Drop
		{
			newLeafNode(otherlv_1, grammarAccess.getCraneDropAccess().getDropKeyword_1());
		}
		otherlv_2=Item
		{
			newLeafNode(otherlv_2, grammarAccess.getCraneDropAccess().getItemKeyword_2());
		}
		otherlv_3=At
		{
			newLeafNode(otherlv_3, grammarAccess.getCraneDropAccess().getAtKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCraneDropRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getCraneDropAccess().getLocationCraneParameterCrossReference_4_0());
				}
			)
		)
	)
;

// Rule COLOR
ruleCOLOR returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0=Red
			{
				$current = grammarAccess.getCOLORAccess().getREDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getCOLORAccess().getREDEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1=Blue
			{
				$current = grammarAccess.getCOLORAccess().getBLUEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getCOLORAccess().getBLUEEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2=Green
			{
				$current = grammarAccess.getCOLORAccess().getGREENEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getCOLORAccess().getGREENEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule CONST_VARIABLES
ruleCONST_VARIABLES returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0=Full
			{
				$current = grammarAccess.getCONST_VARIABLESAccess().getFULLEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getCONST_VARIABLESAccess().getFULLEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1=Finished
			{
				$current = grammarAccess.getCONST_VARIABLESAccess().getFINISHEDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getCONST_VARIABLESAccess().getFINISHEDEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2=Empty
			{
				$current = grammarAccess.getCONST_VARIABLESAccess().getEMPTYEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getCONST_VARIABLESAccess().getEMPTYEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule BOOLEAN_OPERATOR
ruleBOOLEAN_OPERATOR returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0=Not
			{
				$current = grammarAccess.getBOOLEAN_OPERATORAccess().getNOTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getBOOLEAN_OPERATORAccess().getNOTEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1=LessThan
			{
				$current = grammarAccess.getBOOLEAN_OPERATORAccess().getLESSEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getBOOLEAN_OPERATORAccess().getLESSEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2=GreaterThan
			{
				$current = grammarAccess.getBOOLEAN_OPERATORAccess().getGREATEREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getBOOLEAN_OPERATORAccess().getGREATEREnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule TIME
ruleTIME returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0=Seconds
			{
				$current = grammarAccess.getTIMEAccess().getSECONDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getTIMEAccess().getSECONDEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1=Second
			{
				$current = grammarAccess.getTIMEAccess().getSECONDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getTIMEAccess().getSECONDEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2=Minutes
			{
				$current = grammarAccess.getTIMEAccess().getMINUTEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getTIMEAccess().getMINUTEEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3=Minute
			{
				$current = grammarAccess.getTIMEAccess().getMINUTEEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getTIMEAccess().getMINUTEEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4=Hours
			{
				$current = grammarAccess.getTIMEAccess().getHOUREnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getTIMEAccess().getHOUREnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5=Hour
			{
				$current = grammarAccess.getTIMEAccess().getHOUREnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getTIMEAccess().getHOUREnumLiteralDeclaration_5());
			}
		)
	)
;
