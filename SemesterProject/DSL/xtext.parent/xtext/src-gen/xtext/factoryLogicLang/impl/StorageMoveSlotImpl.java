/**
 * generated by Xtext 2.25.0
 */
package xtext.factoryLogicLang.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import xtext.factoryLogicLang.FactoryLogicLangPackage;
import xtext.factoryLogicLang.Storage;
import xtext.factoryLogicLang.StorageMoveSlot;
import xtext.factoryLogicLang.StoragePositionParameter;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Storage Move Slot</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link xtext.factoryLogicLang.impl.StorageMoveSlotImpl#getDevice <em>Device</em>}</li>
 *   <li>{@link xtext.factoryLogicLang.impl.StorageMoveSlotImpl#getPosition <em>Position</em>}</li>
 *   <li>{@link xtext.factoryLogicLang.impl.StorageMoveSlotImpl#getDestination <em>Destination</em>}</li>
 * </ul>
 *
 * @generated
 */
public class StorageMoveSlotImpl extends OperationImpl implements StorageMoveSlot
{
  /**
   * The cached value of the '{@link #getDevice() <em>Device</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDevice()
   * @generated
   * @ordered
   */
  protected Storage device;

  /**
   * The cached value of the '{@link #getPosition() <em>Position</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPosition()
   * @generated
   * @ordered
   */
  protected StoragePositionParameter position;

  /**
   * The cached value of the '{@link #getDestination() <em>Destination</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDestination()
   * @generated
   * @ordered
   */
  protected StoragePositionParameter destination;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected StorageMoveSlotImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return FactoryLogicLangPackage.Literals.STORAGE_MOVE_SLOT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Storage getDevice()
  {
    if (device != null && device.eIsProxy())
    {
      InternalEObject oldDevice = (InternalEObject)device;
      device = (Storage)eResolveProxy(oldDevice);
      if (device != oldDevice)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, FactoryLogicLangPackage.STORAGE_MOVE_SLOT__DEVICE, oldDevice, device));
      }
    }
    return device;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Storage basicGetDevice()
  {
    return device;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDevice(Storage newDevice)
  {
    Storage oldDevice = device;
    device = newDevice;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FactoryLogicLangPackage.STORAGE_MOVE_SLOT__DEVICE, oldDevice, device));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public StoragePositionParameter getPosition()
  {
    if (position != null && position.eIsProxy())
    {
      InternalEObject oldPosition = (InternalEObject)position;
      position = (StoragePositionParameter)eResolveProxy(oldPosition);
      if (position != oldPosition)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, FactoryLogicLangPackage.STORAGE_MOVE_SLOT__POSITION, oldPosition, position));
      }
    }
    return position;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public StoragePositionParameter basicGetPosition()
  {
    return position;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPosition(StoragePositionParameter newPosition)
  {
    StoragePositionParameter oldPosition = position;
    position = newPosition;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FactoryLogicLangPackage.STORAGE_MOVE_SLOT__POSITION, oldPosition, position));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public StoragePositionParameter getDestination()
  {
    if (destination != null && destination.eIsProxy())
    {
      InternalEObject oldDestination = (InternalEObject)destination;
      destination = (StoragePositionParameter)eResolveProxy(oldDestination);
      if (destination != oldDestination)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, FactoryLogicLangPackage.STORAGE_MOVE_SLOT__DESTINATION, oldDestination, destination));
      }
    }
    return destination;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public StoragePositionParameter basicGetDestination()
  {
    return destination;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDestination(StoragePositionParameter newDestination)
  {
    StoragePositionParameter oldDestination = destination;
    destination = newDestination;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FactoryLogicLangPackage.STORAGE_MOVE_SLOT__DESTINATION, oldDestination, destination));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case FactoryLogicLangPackage.STORAGE_MOVE_SLOT__DEVICE:
        if (resolve) return getDevice();
        return basicGetDevice();
      case FactoryLogicLangPackage.STORAGE_MOVE_SLOT__POSITION:
        if (resolve) return getPosition();
        return basicGetPosition();
      case FactoryLogicLangPackage.STORAGE_MOVE_SLOT__DESTINATION:
        if (resolve) return getDestination();
        return basicGetDestination();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case FactoryLogicLangPackage.STORAGE_MOVE_SLOT__DEVICE:
        setDevice((Storage)newValue);
        return;
      case FactoryLogicLangPackage.STORAGE_MOVE_SLOT__POSITION:
        setPosition((StoragePositionParameter)newValue);
        return;
      case FactoryLogicLangPackage.STORAGE_MOVE_SLOT__DESTINATION:
        setDestination((StoragePositionParameter)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case FactoryLogicLangPackage.STORAGE_MOVE_SLOT__DEVICE:
        setDevice((Storage)null);
        return;
      case FactoryLogicLangPackage.STORAGE_MOVE_SLOT__POSITION:
        setPosition((StoragePositionParameter)null);
        return;
      case FactoryLogicLangPackage.STORAGE_MOVE_SLOT__DESTINATION:
        setDestination((StoragePositionParameter)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case FactoryLogicLangPackage.STORAGE_MOVE_SLOT__DEVICE:
        return device != null;
      case FactoryLogicLangPackage.STORAGE_MOVE_SLOT__POSITION:
        return position != null;
      case FactoryLogicLangPackage.STORAGE_MOVE_SLOT__DESTINATION:
        return destination != null;
    }
    return super.eIsSet(featureID);
  }

} //StorageMoveSlotImpl
