/**
 * generated by Xtext 2.25.0
 */
package xtext.factoryLogicLang.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import xtext.factoryLogicLang.FactoryLogicLangPackage;
import xtext.factoryLogicLang.StorageSlotParameter;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Storage Slot Parameter</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link xtext.factoryLogicLang.impl.StorageSlotParameterImpl#getSlots <em>Slots</em>}</li>
 * </ul>
 *
 * @generated
 */
public class StorageSlotParameterImpl extends StorageParameterImpl implements StorageSlotParameter
{
  /**
   * The default value of the '{@link #getSlots() <em>Slots</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSlots()
   * @generated
   * @ordered
   */
  protected static final int SLOTS_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getSlots() <em>Slots</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSlots()
   * @generated
   * @ordered
   */
  protected int slots = SLOTS_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected StorageSlotParameterImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return FactoryLogicLangPackage.Literals.STORAGE_SLOT_PARAMETER;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getSlots()
  {
    return slots;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSlots(int newSlots)
  {
    int oldSlots = slots;
    slots = newSlots;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FactoryLogicLangPackage.STORAGE_SLOT_PARAMETER__SLOTS, oldSlots, slots));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case FactoryLogicLangPackage.STORAGE_SLOT_PARAMETER__SLOTS:
        return getSlots();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case FactoryLogicLangPackage.STORAGE_SLOT_PARAMETER__SLOTS:
        setSlots((Integer)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case FactoryLogicLangPackage.STORAGE_SLOT_PARAMETER__SLOTS:
        setSlots(SLOTS_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case FactoryLogicLangPackage.STORAGE_SLOT_PARAMETER__SLOTS:
        return slots != SLOTS_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (slots: ");
    result.append(slots);
    result.append(')');
    return result.toString();
  }

} //StorageSlotParameterImpl
